{
  "name": "codebraid-preview",
  "displayName": "Codebraid Preview",
  "description": "Preview Markdown documents with Pandoc.  Optionally execute code blocks and inline code with Codebraid, using Jupyter kernels or its built-in code execution system.",
  "version": "0.11.0",
  "publisher": "gpoore",
  "homepage": "https://github.com/gpoore/codebraid-preview-vscode",
  "license": "See license in LICENSE.txt (BSD 3-Clause except as noted otherwise)",
  "repository": {
    "type": "git",
    "url": "https://github.com/gpoore/codebraid-preview-vscode.git"
  },
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "onCommand:codebraidPreview.startPreview",
    "onCommand:codebraidPreview.runCodebraid",
    "onCommand:codebraidPreview.exportDocument"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "grammars": [
      {
        "path": "./syntaxes/julia_codeblock.json",
        "scopeName": "markdown.julia.codebraid",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.julia": "julia"
        }
      }
    ],
    "commands": [
      {
        "command": "codebraidPreview.startPreview",
        "title": "Open Codebraid Preview",
        "category": "Codebraid preview"
      },
      {
        "command": "codebraidPreview.runCodebraid",
        "title": "Run code with Codebraid",
        "category": "Codebraid preview"
      },
      {
        "command": "codebraidPreview.exportDocument",
        "title": "Export document with Pandoc",
        "category": "Codebraid preview"
      }
    ],
    "configuration": {
      "title": "Codebraid Preview",
      "properties": {
        "codebraid.preview.maxPreviews": {
          "type": "number",
          "default": 5,
          "description": "Maximum number of preview panels allowed concurrently."
        },
        "codebraid.preview.minBuildInterval": {
          "type": "number",
          "default": 1000,
          "description": "Minimum interval between document builds in milliseconds."
        },
        "codebraid.preview.scrollPreviewWithEditor": {
          "type": "boolean",
          "default": true,
          "description": "Scroll preview to sync with editor"
        },
        "codebraid.preview.scrollEditorWithPreview": {
          "type": "boolean",
          "default": true,
          "description": "Scroll editor to sync with preview"
        },
        "codebraid.preview.css.useDefault": {
          "type": "boolean",
          "default": true,
          "description": "Whether the preview's default CSS is used"
        },
        "codebraid.preview.css.overrideDefault": {
          "type": "boolean",
          "default": true,
          "description": "Whether document CSS overrides the preview's default CSS (determines which is loaded last)"
        },
        "codebraid.preview.pandoc.fromFormat": {
          "type": "string",
          "default": "commonmark_x",
          "description": "Pandoc source format (`--from=FORMAT`).  Currently, only \"commonmark_x\" supports scroll sync."
        },
        "codebraid.preview.pandoc.options": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Pandoc option in `--option`, `--option=VALUE`, or `--option VALUE` form.  Options are evaluated within a shell, so spaces must be quoted.",
            "pattern": "^(?!-f|--from|-r|--read)(?:-[a-zA-Z]|--[a-zA-Z]+(?:-[a-zA-Z]+)*)(?:[ =](?:\"[^\"]+\"(?!\")|'[^']+'|[^ \"';&|]+(?=[\"']|$))+)?$",
            "patternErrorMessage": "One option (including any value) per line/array element.  Options are evaluated within a shell, so spaces must be quoted.  Specify source format in \"pandocFromFormat\"."
          },
          "default": [],
          "description": "Pandoc command-line options.  In the settings GUI, one option per line (for example, `--filter FILTER`).  In `settings.json`, an array with one option per element (for example, `[\"--filter FILTER\"]`).  Options are evaluated within a shell, so spaces must be quoted."
        },
        "codebraid.preview.pandoc.previewDefaultsFile": {
          "type": "string",
          "default": "_codebraid_preview.yaml",
          "pattern": "^[^\\\\/]+$",
          "patternErrorMessage": "Must be a file name without a path to the file.",
          "description": "Special Pandoc defaults file in document directory.  If it exists and defines \"input-files\", the preview will automatically work with all files in a multi-file document."
        },
        "codebraid.preview.pandoc.showRaw": {
          "type": "boolean",
          "default": true,
          "description": "Display a verbatim representation of non-HTML raw content `{=format}` in the preview."
        },
        "codebraid.preview.security.allowInlineScripts": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to use inline scripts <script>...</script>.  (Scripts bundled as part of the extension are always allowed.)"
        },
        "codebraid.preview.security.allowLocalFonts": {
          "type": "boolean",
          "default": true,
          "description": "Allow the preview to load fonts from the current workspace folder, the document directory, and any other locations specified in security.extraLocalResourceRoots.  (Fonts bundled as part of the extension are always allowed.)"
        },
        "codebraid.preview.security.allowLocalImages": {
          "type": "boolean",
          "default": true,
          "description": "Allow the preview to load images from the current workspace folder, the document directory, and any other locations specified in security.extraLocalResourceRoots."
        },
        "codebraid.preview.security.allowLocalMedia": {
          "type": "boolean",
          "default": true,
          "description": "Allow the preview to load media from the current workspace folder, the document directory, and any other locations specified in security.extraLocalResourceRoots."
        },
        "codebraid.preview.security.allowLocalScripts": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load scripts from the current workspace folder, the document directory, and any other locations specified in security.extraLocalResourceRoots.  (Scripts bundled as part of the extension are always allowed.)"
        },
        "codebraid.preview.security.allowLocalStyles": {
          "type": "boolean",
          "default": true,
          "description": "Allow the preview to load styles from the current workspace folder, the document directory, and any other locations specified in security.extraLocalResourceRoots.  (Styles bundled as part of the extension are always allowed.)"
        },
        "codebraid.preview.security.allowRemoteFonts": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load fonts from remote locations via https."
        },
        "codebraid.preview.security.allowRemoteImages": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load images from remote locations via https."
        },
        "codebraid.preview.security.allowRemoteMedia": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load media from remote locations via https."
        },
        "codebraid.preview.security.allowRemoteScripts": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load scripts from remote locations via https."
        },
        "codebraid.preview.security.allowRemoteStyles": {
          "type": "boolean",
          "default": false,
          "description": "Allow the preview to load styles from remote locations via https."
        },
        "codebraid.preview.security.extraLocalResourceRoots": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Absolute or relative path.  In absolute paths, a leading ~/ is expanded to the user's home directory.  Relative paths are relative to the document file; for example, ../images refers to an images directory one level up from the document.",
            "pattern": "~[/\\\\].*|[^~].*",
            "patternErrorMessage": "A leading ~ is only allowed when followed by a path separator."
          },
          "default": [],
          "description": "Additional root paths from which the preview can load local (filesystem) resources, such as images.  These are in addition to the current workspace folders and the document directory."
        }
      }
    }
  },
  "dependencies": {
    "@types/js-yaml": "^4.0.5",
    "@vscode/codicons": "^0.0.32",
    "js-yaml": "^4.1.0",
    "katex": "^0.16.4"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "18.x",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^2.1.4",
    "eslint": "^8.1.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "ts-loader": "^9.2.5",
    "typescript": "^4.4.4",
    "webpack": "^5.52.1",
    "webpack-cli": "^4.8.0"
  }
}
